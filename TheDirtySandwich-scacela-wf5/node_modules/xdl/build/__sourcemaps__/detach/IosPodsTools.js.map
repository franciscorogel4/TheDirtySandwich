{"version":3,"sources":["detach/IosPodsTools.js"],"names":["async","pathToTemplate","pathToOutput","moreSubstitutions","sdkVersion","let","templatesDirectory","path","dirname","templateString","await","fs","promise","readFile","reactNativePath","REACT_NATIVE_PATH","rnDependencyOptions","versionedDependencies","renderVersionedReactNativeDependenciesAsync","versionedPostinstalls","renderVersionedReactNativePostinstallsAsync","podDependencies","renderPodDependenciesAsync","join","isPodfile","substitutions","EXPONENT_CLIENT_DEPS","PODFILE_UNVERSIONED_RN_DEPENDENCY","renderUnversionedReactNativeDependency","PODFILE_UNVERSIONED_POSTINSTALL","renderUnversionedPostinstall","PODFILE_DETACHED_POSTINSTALL","renderDetachedPostinstall","PODFILE_VERSIONED_RN_DEPENDENCIES","PODFILE_VERSIONED_POSTINSTALLS","PODFILE_TEST_TARGET","renderPodfileTestTarget","result","key","hasOwnProperty","replacement","replace","RegExp","writeFile","renderPodfileAsync","dependencies","IOS_EXPONENT_CLIENT_VERSION","renderExponentViewPodspecAsync","concatTemplateFilesInDirectoryAsync","directory","templateFilenames","glob","templateStrings","Promise","all","map","filename","push","dependenciesConfigPath","options","readAsync","type","depsStrings","dependency","name","version","indentString","renderUnversionedReactDependency","renderUnversionedYogaDependency","attributes","Error","subspecs","renderDependencyAttributes","attributesStrings","Object","keys","value","JSON","stringify","podName","podsRootSub"],"mappings":"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","file":"../../detach/IosPodsTools.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n\n'use strict';\n\nimport fs from 'fs';\nimport glob from 'glob';\nimport indentString from 'indent-string';\nimport 'instapromise';\nimport JsonFile from '@exponent/json-file';\nimport path from 'path';\n\n/**\n *  @param pathToTemplate path to template Podfile\n *  @param pathToOutput path to render final Podfile\n *  @param moreSubstitutions dictionary of additional substitution keys and values to replace\n *         in the template, such as: TARGET_NAME, EXPONENT_ROOT_PATH, REACT_NATIVE_PATH\n */\nasync function renderPodfileAsync(\n  pathToTemplate,\n  pathToOutput,\n  moreSubstitutions,\n  sdkVersion = 'UNVERSIONED'\n) {\n  if (!moreSubstitutions) {\n    moreSubstitutions = {};\n  }\n  let templatesDirectory = path.dirname(pathToTemplate);\n  let templateString = await fs.promise.readFile(pathToTemplate, 'utf8');\n\n  let reactNativePath = moreSubstitutions.REACT_NATIVE_PATH;\n  let rnDependencyOptions;\n  if (reactNativePath) {\n    rnDependencyOptions = { reactNativePath };\n  } else {\n    rnDependencyOptions = {};\n  }\n\n  let versionedDependencies = await renderVersionedReactNativeDependenciesAsync(\n    templatesDirectory\n  );\n  let versionedPostinstalls = await renderVersionedReactNativePostinstallsAsync(\n    templatesDirectory\n  );\n  let podDependencies = await renderPodDependenciesAsync(\n    path.join(templatesDirectory, 'dependencies.json'),\n    { isPodfile: true }\n  );\n\n  let substitutions = {\n    EXPONENT_CLIENT_DEPS: podDependencies,\n    PODFILE_UNVERSIONED_RN_DEPENDENCY: renderUnversionedReactNativeDependency(\n      rnDependencyOptions,\n      sdkVersion\n    ),\n    PODFILE_UNVERSIONED_POSTINSTALL: renderUnversionedPostinstall(),\n    PODFILE_DETACHED_POSTINSTALL: renderDetachedPostinstall(sdkVersion),\n    PODFILE_VERSIONED_RN_DEPENDENCIES: versionedDependencies,\n    PODFILE_VERSIONED_POSTINSTALLS: versionedPostinstalls,\n    PODFILE_TEST_TARGET: renderPodfileTestTarget(reactNativePath),\n    ...moreSubstitutions,\n  };\n\n  let result = templateString;\n  for (let key in substitutions) {\n    if (substitutions.hasOwnProperty(key)) {\n      let replacement = substitutions[key];\n      result = result.replace(\n        new RegExp(`\\\\\\$\\\\\\{${key}\\\\\\}`, 'g'),\n        replacement\n      );\n    }\n  }\n\n  await fs.promise.writeFile(pathToOutput, result);\n}\n\nasync function renderExponentViewPodspecAsync(\n  pathToTemplate,\n  pathToOutput,\n  moreSubstitutions\n) {\n  let templatesDirectory = path.dirname(pathToTemplate);\n  let templateString = await fs.promise.readFile(pathToTemplate, 'utf8');\n  let dependencies = await renderPodDependenciesAsync(\n    path.join(templatesDirectory, 'dependencies.json'),\n    { isPodfile: false }\n  );\n  let result = templateString.replace(\n    /\\$\\{IOS_EXPONENT_VIEW_DEPS\\}/g,\n    dependencies\n  );\n  if (moreSubstitutions && moreSubstitutions.IOS_EXPONENT_CLIENT_VERSION) {\n    result = result.replace(\n      /\\$\\{IOS_EXPONENT_CLIENT_VERSION\\}/g,\n      moreSubstitutions.IOS_EXPONENT_CLIENT_VERSION\n    );\n  }\n\n  await fs.promise.writeFile(pathToOutput, result);\n}\n\nfunction renderUnversionedReactNativeDependency(options, sdkVersion) {\n  if (sdkVersion === '14.0.0') {\n    return indentString(\n      `\n${renderUnversionedReactDependency(options)}\n`,\n      2\n    );\n  } else {\n    return indentString(\n      `\n${renderUnversionedReactDependency(options)}\n${renderUnversionedYogaDependency(options)}\n`,\n      2\n    );\n  }\n}\n\nfunction renderUnversionedReactDependency(options) {\n  let attributes;\n  if (options.reactNativePath) {\n    attributes = {\n      path: options.reactNativePath,\n    };\n  } else {\n    throw new Error(`Unsupported options for RN dependency: ${options}`);\n  }\n\n  attributes.subspecs = [\n    'Core',\n    'ART',\n    'DevSupport',\n    'RCTActionSheet',\n    'RCTAnimation',\n    'RCTCameraRoll',\n    'RCTGeolocation',\n    'RCTImage',\n    'RCTNetwork',\n    'RCTText',\n    'RCTVibration',\n    'RCTWebSocket',\n  ];\n\n  return `pod 'React',\n${indentString(renderDependencyAttributes(attributes), 2)}`;\n}\n\nfunction renderUnversionedYogaDependency(options) {\n  let attributes;\n  if (options.reactNativePath) {\n    attributes = {\n      path: path.join(options.reactNativePath, 'ReactCommon', 'yoga'),\n    };\n  } else {\n    throw new Error(`Unsupported options for Yoga dependency: ${options}`);\n  }\n  return `pod 'Yoga',\n${indentString(renderDependencyAttributes(attributes), 2)}`;\n}\n\nfunction renderDependencyAttributes(attributes) {\n  let attributesStrings = [];\n  for (let key of Object.keys(attributes)) {\n    let value = JSON.stringify(attributes[key], null, 2);\n    attributesStrings.push(`:${key} => ${value}`);\n  }\n  return attributesStrings.join(',\\n');\n}\n\nasync function renderVersionedReactNativeDependenciesAsync(templatesDirectory) {\n  // TODO: write these files with versioning script\n  return concatTemplateFilesInDirectoryAsync(\n    path.join(templatesDirectory, 'versioned-react-native', 'dependencies')\n  );\n}\n\nasync function renderVersionedReactNativePostinstallsAsync(templatesDirectory) {\n  // TODO: write these files with versioning script\n  return concatTemplateFilesInDirectoryAsync(\n    path.join(templatesDirectory, 'versioned-react-native', 'postinstalls')\n  );\n}\n\nasync function concatTemplateFilesInDirectoryAsync(directory) {\n  let templateFilenames = await glob.promise(path.join(directory, '*.rb'));\n  let templateStrings = [];\n  await Promise.all(\n    templateFilenames.map(async filename => {\n      let templateString = await fs.promise.readFile(filename, 'utf8');\n      if (templateString) {\n        templateStrings.push(templateString);\n      }\n    })\n  );\n  return templateStrings.join('\\n');\n}\n\nfunction renderDetachedPostinstall(sdkVersion) {\n  let podName = sdkVersion === '14.0.0' ? 'ExponentView' : 'ExpoKit';\n\n  let podsRootSub = '${PODS_ROOT}';\n  return `\n    if target.pod_name == '${podName}'\n      target.native_target.build_configurations.each do |config|\n        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']\n        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'EX_DETACHED=1'\n        # needed for GoogleMaps 2.x\n        config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= []\n        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${podsRootSub}/GoogleMaps/Base/Frameworks'\n        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${podsRootSub}/GoogleMaps/Maps/Frameworks'\n      end\n    end\n`;\n}\n\nfunction renderUnversionedPostinstall() {\n  return `\n    # Build React Native with RCT_DEV enabled\n    next unless target.pod_name == 'React'\n    target.native_target.build_configurations.each do |config|\n      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']\n      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_DEV=1'\n    end\n`;\n}\n\nfunction renderPodfileTestTarget(reactNativePath) {\n  return `\n  # if you run into problems pre-downloading this, rm Pods/Local\\ Podspecs/RCTTest.podspec.json\n  target 'ExponentIntegrationTests' do\n    inherit! :search_paths\n    pod 'RCTTest', :podspec => './RCTTest.podspec', :path => '${reactNativePath}'\n  end\n`;\n}\n\nasync function renderPodDependenciesAsync(dependenciesConfigPath, options) {\n  let dependencies = await new JsonFile(dependenciesConfigPath).readAsync();\n  let type = options.isPodfile ? 'pod' : 's.dependency';\n  let depsStrings = dependencies.map(\n    dependency => `  ${type} '${dependency.name}', '${dependency.version}'`\n  );\n  return depsStrings.join('\\n');\n}\n\nexport { renderExponentViewPodspecAsync, renderPodfileAsync };\n"],"sourceRoot":"/xdl/src"}