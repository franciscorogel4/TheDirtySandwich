{"version":3,"sources":["logs/PackagerLogsStream.js"],"names":["PackagerLogsStream","constructor","projectRoot","getCurrentOpenProjectId","updateLogs","onStartBuildBundle","onProgressBuildBundle","onFinishBuildBundle","_resetState","_logsToAdd","_chunkID","_handlePackagerEvent","chunk","let","msg","type","match","_handleBundleTransformEvent","port","_enqueueAppendLogChunk","_handleNewBundleTransformStarted","_bundleBuildChunkID","_handleUpdateBundleTransformProgress","_id","_bundleBuildStart","Date","_onStartBuildBundle","_immediatelyAppendLogChunk","progressChunk","percentProgress","bundleComplete","bundleError","bundleBuildEnd","Error","Math","floor","transformedFileCount","totalFileCount","_onProgressBuildBundle","_onFinishBuildBundle","_updateLogs","logs","length","forEach","log","duration","error","_enqueueFlushLogsToAdd","wait","requestAnimationFrame","setImmediate","nextLogs","concat","_legacyFormatter","progress","_cleanUpNodeErrors","replace","_projectRoot","_getCurrentOpenProjectId","_attachLoggerStream","projectId","ProjectUtils","attachLoggerStream","stream","write","tag","_maybeParseMsgJSON","_formatMsg","_attachChunkID","shouldHide","push","parsedMsg","JSON","parse","e","trim"],"mappings":"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","file":"../../logs/PackagerLogsStream.js","sourcesContent":["/* @flow */\n\nimport * as ProjectUtils from '../project/ProjectUtils';\nimport { trim } from 'lodash';\n\ntype ChunkT = {\n  _id: ?number,\n  shouldHide: boolean,\n  msg: any,\n  tag: 'packager' | 'expo' | 'device',\n};\n\ntype LogUpdater = (logState: Array<ChunkT>) => Array<ChunkT>;\n\nexport default class PackagerLogsStream {\n  _projectRoot: string;\n  _getCurrentOpenProjectId: () => any;\n  _updateLogs: (updater: LogUpdater) => void;\n  _logsToAdd: Array<ChunkT>;\n  _chunkID: number;\n  _bundleBuildChunkID: ?number;\n  _onStartBuildBundle: ?Function;\n  _onProgressBuildBundle: ?Function;\n  _onFinishBuildBundle: ?Function;\n  _onFailBuildBundle: ?Function;\n  _bundleBuildStart: ?Date;\n\n  _resetState = () => {\n    this._logsToAdd = [];\n    this._chunkID = 0;\n  };\n\n  constructor({\n    projectRoot,\n    getCurrentOpenProjectId,\n    updateLogs,\n    onStartBuildBundle,\n    onProgressBuildBundle,\n    onFinishBuildBundle,\n  }: {\n    projectRoot: string,\n    getCurrentOpenProjectId?: () => any,\n    updateLogs: (updater: LogUpdater) => void,\n    onStartBuildBundle?: () => void,\n    onProgressBuildBundle?: (progress: number) => void,\n    onFinishBuildBundle?: () => void,\n  }) {\n    this._resetState();\n    this._projectRoot = projectRoot;\n    this._getCurrentOpenProjectId = getCurrentOpenProjectId || (() => 1);\n    this._updateLogs = updateLogs;\n\n    // Optional properties in case the consumer wants to handle updates on\n    // its own, eg: for a progress bar\n    this._onStartBuildBundle = onStartBuildBundle;\n    this._onProgressBuildBundle = onProgressBuildBundle;\n    this._onFinishBuildBundle = onFinishBuildBundle;\n\n    this._attachLoggerStream();\n  }\n\n  _attachLoggerStream() {\n    let projectId = this._getCurrentOpenProjectId();\n\n    ProjectUtils.attachLoggerStream(this._projectRoot, {\n      stream: {\n        write: (chunk: any) => {\n          if (chunk.tag !== 'packager' && chunk.tag !== 'expo') {\n            return;\n          } else if (this._getCurrentOpenProjectId() !== projectId) {\n            // TODO: We should be confident that we are properly unsubscribing\n            // from the stream rather than doing a defensive check like this.\n            return;\n          }\n\n          chunk = this._maybeParseMsgJSON(chunk);\n          chunk = this._formatMsg(chunk);\n          chunk = this._cleanUpNodeErrors(chunk);\n          chunk = this._attachChunkID(chunk);\n\n          if (typeof chunk.msg === 'object' || chunk.type === 'packager') {\n            this._handlePackagerEvent(chunk);\n          } else if (\n            !chunk.msg.match(/\\w/) || !chunk.msg || chunk.msg[0] === '{'\n          ) {\n            return;\n          } else {\n            this._enqueueAppendLogChunk(chunk);\n          }\n        },\n      },\n      type: 'raw',\n    });\n  }\n\n  // This is where we handle any special packager events\n  _handlePackagerEvent = (chunk: any) => {\n    let { msg } = chunk;\n\n    if (msg.type.match(/^bundle_/)) {\n      this._handleBundleTransformEvent(chunk);\n      return;\n    }\n\n    if (msg.type === 'dep_graph_loading') {\n      chunk.msg = 'Loading dependency graph.'; // doesn't seem important to log this\n    } else if (msg.type == 'dep_graph_loaded') {\n      chunk.msg = 'Dependency graph loaded.'; // doesn't seem important to log this\n    } else if (msg.type === 'transform_cache_reset') {\n      chunk.msg =\n        'Your JavaScript transform cache is empty, rebuilding (this may take a minute).';\n    } else if (msg.type === 'initialize_packager_started') {\n      chunk.msg = `Running packager on port ${msg.port}.`;\n    } else {\n      chunk.msg = '';\n    }\n\n    this._enqueueAppendLogChunk(chunk);\n  };\n\n  // Any event related to bundle building is handled here\n  _handleBundleTransformEvent = (chunk: any) => {\n    let { msg } = chunk;\n\n    if (msg.type === 'bundle_build_started') {\n      this._handleNewBundleTransformStarted(chunk);\n    } else if (msg.type === 'bundle_transform_progressed') {\n      this._bundleBuildChunkID\n        ? this._handleUpdateBundleTransformProgress(chunk)\n        : this._handleNewBundleTransformStarted(chunk);\n    } else if (msg.type === 'bundle_build_failed') {\n      if (!this._bundleBuildChunkID) {\n        return; // maybe?\n      } else {\n        this._handleUpdateBundleTransformProgress(chunk);\n      }\n    } else if (msg.type === 'bundle_build_done') {\n      if (!this._bundleBuildChunkID) {\n        return; // maybe?\n      } else {\n        this._handleUpdateBundleTransformProgress(chunk);\n      }\n    } else {\n      // Unrecognized bundle_* message!\n    }\n  };\n\n  _handleNewBundleTransformStarted = (chunk: any) => {\n    this._bundleBuildChunkID = chunk._id;\n    this._bundleBuildStart = new Date();\n    chunk.msg = 'Building JavaScript bundle';\n\n    if (this._onStartBuildBundle) {\n      this._onStartBuildBundle();\n    } else {\n      this._immediatelyAppendLogChunk(chunk);\n    }\n  };\n\n  _handleUpdateBundleTransformProgress = (progressChunk: any) => {\n    let { msg } = progressChunk;\n    let percentProgress;\n    let bundleComplete = false;\n    let bundleError = false;\n    let bundleBuildEnd;\n\n    if (msg.type === 'bundle_build_done') {\n      percentProgress = 100;\n      bundleComplete = true;\n      bundleBuildEnd = new Date();\n    } else if (msg.type === 'bundle_build_failed') {\n      percentProgress = -1;\n      bundleComplete = true;\n      bundleError = new Error('Failed to build bundle');\n      bundleBuildEnd = new Date();\n    } else {\n      percentProgress = Math.floor(\n        msg.transformedFileCount / msg.totalFileCount * 100\n      );\n    }\n\n    if (this._onProgressBuildBundle) {\n      this._onProgressBuildBundle(percentProgress);\n\n      if (bundleComplete) {\n        this._onFinishBuildBundle &&\n          this._onFinishBuildBundle(\n            bundleError,\n            this._bundleBuildStart,\n            bundleBuildEnd\n          );\n        this._bundleBuildStart = null;\n        this._bundleBuildChunkID = null;\n      }\n    } else {\n      this._updateLogs(logs => {\n        if (!logs || !logs.length) {\n          return [];\n        }\n\n        logs.forEach(log => {\n          if (log._id === this._bundleBuildChunkID) {\n            if (percentProgress === 100) {\n              let duration;\n              if (this._bundleBuildStart) {\n                duration = bundleBuildEnd - this._bundleBuildStart;\n              }\n\n              if (duration) {\n                log.msg = `Building JavaScript bundle: finished in ${duration}ms.`;\n              } else {\n                log.msg = `Building JavaScript bundle: finished.`;\n              }\n            } else if (percentProgress === -1) {\n              log.msg = `Building JavaScript bundle: error\\n${msg.error}`;\n            } else {\n              log.msg = `Building JavaScript bundle: ${percentProgress}%`;\n            }\n          }\n        });\n\n        if (bundleComplete) {\n          this._bundleBuildChunkID = null;\n        }\n\n        return [...logs];\n      });\n    }\n  };\n\n  _immediatelyAppendLogChunk(chunk: ChunkT) {\n    this._updateLogs(logs => {\n      let nextLogs = logs.concat(chunk);\n      return nextLogs;\n    });\n  }\n\n  _enqueueAppendLogChunk(chunk: ChunkT) {\n    if (chunk.shouldHide) {\n      return;\n    } else {\n      this._logsToAdd.push(chunk);\n      this._enqueueFlushLogsToAdd();\n    }\n  }\n\n  _enqueueFlushLogsToAdd = () => {\n    const wait = typeof requestAnimationFrame === 'function'\n      ? requestAnimationFrame\n      : setImmediate;\n\n    wait(() => {\n      this._updateLogs(logs => {\n        if (this._logsToAdd.length === 0) {\n          return logs;\n        }\n\n        let nextLogs = logs.concat(this._logsToAdd);\n        this._logsToAdd = [];\n        return nextLogs;\n      });\n    });\n  };\n\n  _attachChunkID(chunk: any) {\n    this._chunkID++;\n    chunk._id = this._chunkID;\n    return chunk;\n  }\n\n  _maybeParseMsgJSON(chunk: any) {\n    try {\n      let parsedMsg = JSON.parse(chunk.msg);\n      chunk.msg = parsedMsg;\n    } catch (e) {\n      // Fallback to the <= SDK 15 version of formatting logs\n      let msg = this._legacyFormatter(chunk);\n      chunk.msg = msg;\n    }\n\n    return chunk;\n  }\n\n  _legacyFormatter = (chunk: ChunkT) => {\n    if (typeof chunk.msg === 'object') {\n      return chunk;\n    }\n\n    if (chunk.msg.match(/Transforming modules/)) {\n      let progress = chunk.msg.match(/\\d+\\.\\d+% \\(\\d+\\/\\d+\\)/);\n      if (progress && progress[0]) {\n        chunk.msg = `Transforming modules: ${progress[0]}`;\n      }\n    }\n\n    return chunk.msg;\n  };\n\n  _cleanUpNodeErrors = (chunk: ChunkT) => {\n    if (typeof chunk.msg === 'object') {\n      return chunk;\n    }\n\n    if (chunk.msg.match(/\\(node:.\\d*\\)/)) {\n      // Example: (node:13817) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): SyntaxError: SyntaxError /Users/brent/universe/apps/new-project-template/main.js: Unexpected token (10:6)\n      // The first part of this is totally useless, so let's remove it.\n      if (chunk.msg.match(/UnhandledPromiseRejectionWarning/)) {\n        chunk.msg = chunk.msg.replace(/\\(node:.*\\(rejection .*\\):/, '');\n        if (chunk.msg.match(/SyntaxError: SyntaxError/)) {\n          chunk.msg = chunk.msg.replace('SyntaxError: ', '');\n        }\n      } else if (chunk.msg.match(/DeprecationWarning/)) {\n        chunk.msg = '';\n      }\n    }\n\n    return chunk;\n  };\n\n  // This message is just noise\n  // Fall back to the same formatting we did on SDK <= 15 before we had a custom\n  // reporter class.\n  _formatMsg(chunk: any) {\n    if (typeof chunk.msg === 'object') {\n      return chunk;\n    }\n\n    if (chunk.msg.match(/Looking for JS files in/)) {\n      chunk.msg = '';\n    } else if (chunk.msg.match(/^[\\u001b]/)) {\n      chunk.msg = '';\n    }\n\n    chunk.msg = chunk.msg.replace(/\\[\\w{2}m/g, '');\n    chunk.msg = chunk.msg.replace(/\\[2K/g, '');\n    chunk.msg = trim(chunk.msg);\n    return chunk;\n  }\n}\n"],"sourceRoot":"/xdl/src"}